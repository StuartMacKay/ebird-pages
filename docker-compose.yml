x-app: &default-app
  build:
    context: "."
    target: "app"
    args:
      - "UID=${UID:-1000}"
      - "GID=${GID:-1000}"
      - "DEBUG=${DEBUG:-false}"
      - "DJANGO_ENV=${DJANGO_ENV:-development}"
  depends_on:
    postgres:
      condition: "service_started"
      required: false
    memcached:
      condition: "service_started"
      required: false
    rabbitmq:
      condition: "service_started"
      required: false
  env_file:
    - ".env"
  environment:
    # Override the defaults in .env which are for natively installed services
    BROKER_URL: "${BROKER_URL-amqp://guest:guest@rabbitmq:5672/}"
    CACHE_URL: "${CACHE_URL-pymemcache://memcached:11211}"
    DATABASE_URL: "${DATABASE_URL-postgres://postgres:postgres@postgres:5432/postgres}"
  restart: "${DOCKER_RESTART_POLICY:-no}"
  tty: true

services:
  postgres:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS:-0}"
          memory: "${DOCKER_POSTGRES_MEMORY:-0}"
    environment:
      POSTGRES_USER: "${POSTGRES_USER-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD-postgres}"
      POSTGRES_DB: "${POSTGRES_DB-postgres}"
    image: "postgres:15"
    restart: "${DOCKER_RESTART_POLICY:-no}"
    volumes:
      - "pgdata:/var/lib/postgresql/data"

  memcached:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_MEMCACHED_CPUS:-0}"
          memory: "${DOCKER_MEMCACHED_MEMORY:-0}"
    image: "memcached:latest"
    restart: "${DOCKER_RESTART_POLICY:-no}"

  rabbitmq:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_RABBITMQ_CPUS:-0}"
          memory: "${DOCKER_RABBITMQ_MEMORY:-0}"
    image: "rabbitmq:3.11.9-management"
    restart: "${DOCKER_RESTART_POLICY:-no}"

  django:
    <<: *default-app
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_DJANGO_CPUS:-0}"
          memory: "${DOCKER_DJANGO_MEMORY:-0}"
    healthcheck:
      test: "${DOCKER_DJANGO_HEALTHCHECK_TEST:-curl localhost:8000/watchman/ping}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_DJANGO_PORT_FORWARD-127.0.0.1:8000}:8000"
    volumes:
      - "media:/app/media"
      - "static:/app/static"

  celery-beat:
    <<: *default-app
    command: celery beat --loglevel "${CELERY_LOG_LEVEL:-debug}"
    depends_on:
      django:
        condition: "service_started"
        required: false
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_CELERY_BEAT_CPUS:-0}"
          memory: "${DOCKER_CELERY_BEAT_MEMORY:-0}"
    entrypoint: []

  celery-worker:
    <<: *default-app
    command: celery worker --loglevel "${CELERY_LOG_LEVEL:-debug}"
    depends_on:
      django:
        condition: "service_started"
        required: false
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_CELERY_WORKER_CPUS:-0}"
          memory: "${DOCKER_CELERY_WORKER_MEMORY:-0}"
    entrypoint: []
    volumes:
      - "media:/app/media"

volumes:
  pgdata:
    {}
  media:
    {}
  static:
    {}
